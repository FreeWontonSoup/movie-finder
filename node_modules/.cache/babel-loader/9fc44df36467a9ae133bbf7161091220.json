{"ast":null,"code":"import _classCallCheck from \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Brandon/Documents/React/sweet-pumpkin/APP/src/main/movies/Movies.js\";\n// Movies.js\nimport React from \"react\";\nimport \"./Movies.css\";\nimport MovieListItem from \"./MovieListItem\"; //const movies = [\"Breaking Bad\", \"Narcos\", \"Game of Thrones\"];\n\nvar Movies =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Movies, _React$Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: []\n    };\n\n    _this.storeMovies = function (data) {\n      var movies = data.results.map(function (result) {\n        var vote_count = result.vote_count,\n            id = result.id,\n            genre_ids = result.genre_ids,\n            poster_path = result.poster_path,\n            title = result.title,\n            vote_average = result.vote_average,\n            release_date = result.release_date;\n        return {\n          vote_count: vote_count,\n          id: id,\n          genre_ids: genre_ids,\n          poster_path: poster_path,\n          title: title,\n          vote_average: vote_average,\n          release_date: release_date\n        };\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var apiURL = \"https://api.themoviedb.org/3/discover/movie?api_key=\".concat(process.env.REACT_APP_TMDB_API_KEY, \"&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1\");\n      fetch(apiURL).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.storeMovies(data);\n      }).catch(function (error) {\n        return console.log(error);\n      }); //console.log(\"Before or after data?\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"section\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"movies\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.state.movies.map(function (movie) {\n        return React.createElement(MovieListItem, {\n          key: movie.id,\n          movie: movie,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return Movies;\n}(React.Component);\n\nexport default Movies;","map":{"version":3,"sources":["/Users/Brandon/Documents/React/sweet-pumpkin/APP/src/main/movies/Movies.js"],"names":["React","MovieListItem","Movies","state","movies","storeMovies","data","results","map","result","vote_count","id","genre_ids","poster_path","title","vote_average","release_date","setState","apiURL","process","env","REACT_APP_TMDB_API_KEY","fetch","then","response","json","catch","error","console","log","movie","Component"],"mappings":";;;;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;UAeRC,W,GAAc,UAAAC,IAAI,EAAI;AAClB,UAAMF,MAAM,GAAGE,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAkB,UAAAC,MAAM,EAAI;AAAA,YAChCC,UADgC,GAC6CD,MAD7C,CAChCC,UADgC;AAAA,YACpBC,EADoB,GAC6CF,MAD7C,CACpBE,EADoB;AAAA,YAChBC,SADgB,GAC6CH,MAD7C,CAChBG,SADgB;AAAA,YACLC,WADK,GAC6CJ,MAD7C,CACLI,WADK;AAAA,YACQC,KADR,GAC6CL,MAD7C,CACQK,KADR;AAAA,YACeC,YADf,GAC6CN,MAD7C,CACeM,YADf;AAAA,YAC6BC,YAD7B,GAC6CP,MAD7C,CAC6BO,YAD7B;AAEvC,eAAO;AAACN,UAAAA,UAAU,EAAVA,UAAD;AAAaC,UAAAA,EAAE,EAAFA,EAAb;AAAiBC,UAAAA,SAAS,EAATA,SAAjB;AAA4BC,UAAAA,WAAW,EAAXA,WAA5B;AAAyCC,UAAAA,KAAK,EAALA,KAAzC;AAAgDC,UAAAA,YAAY,EAAZA,YAAhD;AAA8DC,UAAAA,YAAY,EAAZA;AAA9D,SAAP;AACH,OAHc,CAAf;;AAKA,YAAKC,QAAL,CAAe;AAACb,QAAAA,MAAM,EAANA;AAAD,OAAf;AACH,K;;;;;;;wCAlBmB;AAAA;;AAChB,UAAMc,MAAM,iEAA0DC,OAAO,CAACC,GAAR,CAAYC,sBAAtE,2FAAZ;AAEAC,MAAAA,KAAK,CAACJ,MAAD,CAAL,CACKK,IADL,CACU,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADlB,EAEKF,IAFL,CAEU,UAAAjB,IAAI;AAAA,eAAI,MAAI,CAACD,WAAL,CAAiBC,IAAjB,CAAJ;AAAA,OAFd,EAGKoB,KAHL,CAGW,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAHhB,EAHgB,CAQhB;AACH;;;6BAWQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKxB,KAAL,CAAWC,MAAX,CAAkBI,GAAlB,CAAuB,UAAAsB,KAAK;AAAA,eACxB,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,KAAK,CAACnB,EAA1B;AAA8B,UAAA,KAAK,EAAEmB,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,OAA5B,CAFR,CADJ,CADJ;AAWH;;;;EArCgB9B,KAAK,CAAC+B,S;;AAwC3B,eAAe7B,MAAf","sourcesContent":["// Movies.js\n\nimport React from \"react\";\nimport \"./Movies.css\";\nimport MovieListItem from \"./MovieListItem\";\n\n//const movies = [\"Breaking Bad\", \"Narcos\", \"Game of Thrones\"];\n\nclass Movies extends React.Component {\n    state = {\n        movies: []\n    }\n\n    componentDidMount() {\n        const apiURL = `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_API_KEY}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1`\n\n        fetch(apiURL)\n            .then(response => response.json())\n            .then(data => this.storeMovies(data))\n            .catch(error => console.log(error))\n\n        //console.log(\"Before or after data?\");\n    }\n\n    storeMovies = data => {\n        const movies = data.results.map( result => {\n            const {vote_count, id, genre_ids, poster_path, title, vote_average, release_date} = result;\n            return {vote_count, id, genre_ids, poster_path, title, vote_average, release_date};\n        });\n\n        this.setState( {movies} )\n    }\n\n    render() {\n        return (\n            <section>\n                <ul className=\"movies\">\n                    {\n                        this.state.movies.map( movie => (\n                            <MovieListItem key={movie.id} movie={movie} />\n                        ))\n                    }\n                </ul>\n            </section>\n        )\n    }\n}\n\nexport default Movies;"]},"metadata":{},"sourceType":"module"}